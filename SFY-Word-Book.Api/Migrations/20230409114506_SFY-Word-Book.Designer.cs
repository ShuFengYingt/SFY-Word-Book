// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFY_Word_Book.Api.Context;

#nullable disable

namespace SFY_Word_Book.Api.Migrations
{
    [DbContext(typeof(SFYWordBookContext))]
    [Migration("20230409114506_SFY-Word-Book")]
    partial class SFYWordBook
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("SFY_Word_Book.Api.Context.LearningWordBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LearningWords");
                });

            modelBuilder.Entity("SFY_Word_Book.Api.Context.ReviewWordBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ReviewWords");
                });

            modelBuilder.Entity("SFY_Word_Book.Api.Context.Sentence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SentenceCn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SentenceContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SentenceRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WordRank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.ToTable("Sentences");
                });

            modelBuilder.Entity("SFY_Word_Book.Api.Context.Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PartOfSpeech")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TransCN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TransRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WordRank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.ToTable("Translations");
                });

            modelBuilder.Entity("SFY_Word_Book.Api.Context.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SFY_Word_Book.Api.Context.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Combo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HeadWord")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsLearned")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LearningWordBookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneSpeech")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneticSymbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReviewWordBookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WordRank")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LearningWordBookId");

                    b.HasIndex("ReviewWordBookId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("SFY_Word_Book.Api.Context.Sentence", b =>
                {
                    b.HasOne("SFY_Word_Book.Api.Context.Word", "Word")
                        .WithMany("Sentences")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word");
                });

            modelBuilder.Entity("SFY_Word_Book.Api.Context.Translation", b =>
                {
                    b.HasOne("SFY_Word_Book.Api.Context.Word", "Word")
                        .WithMany("Translations")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word");
                });

            modelBuilder.Entity("SFY_Word_Book.Api.Context.Word", b =>
                {
                    b.HasOne("SFY_Word_Book.Api.Context.LearningWordBook", null)
                        .WithMany("Words")
                        .HasForeignKey("LearningWordBookId");

                    b.HasOne("SFY_Word_Book.Api.Context.ReviewWordBook", null)
                        .WithMany("Words")
                        .HasForeignKey("ReviewWordBookId");
                });

            modelBuilder.Entity("SFY_Word_Book.Api.Context.LearningWordBook", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("SFY_Word_Book.Api.Context.ReviewWordBook", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("SFY_Word_Book.Api.Context.Word", b =>
                {
                    b.Navigation("Sentences");

                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
